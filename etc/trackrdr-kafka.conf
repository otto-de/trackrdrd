# Configure the Kafka implementation of the trackrdrd MQ interface.
# This file configures both the messaging plugin and the librdkafka
# client lib.
#
# see: man libtrackrdr-kafka
#      https://github.com/edenhill/librdkafka/blob/master/CONFIGURATION.md

# Log file for the MQ plugin and librdkafka
mq.log = /var/log/trackrdrd/libtrackrdr-kafka.log

# librdkafka configuration for an initial list of brokers.
# Comma-separated list of host:port.
# Either this item of zookeeper.connect MUST be set.
metadata.broker.list = 127.0.0.1:9092

# Name of the Kafka topic to which messages are sent.
topic = tracking

# Comma-separated list of host:port specifying zookeeper servers
# from which an initial list of brokers is obtained.
# Either this item or metadata.broker.list MUST be set.
# zookeeper.connect = 127.0.0.1:2181

# Timeout for connections to zookeeper servers.
# 0 to fail immediately if servers cannot be reached.
# zookeeper.connection.timeout.ms = 0

# Log file for the zookeeper client.
# zookeeper.log = /var/log/libtrackrdr-zoo.log

# log_level is a numeric "severity" for syslog: 6=info, 7=debug
# see: RFC 5424, section 6.2.1, table 2
# log_level = 6

# debug classes for librdkafka
# see rdkafka CONFIGURATION.md for possible values
# debug = all

# Log stats from the MQ plugin and librdkafka at this interval.
# 0 disables stats logging.
# statistics.interval.ms = 0

# Message compression
# compression.codec = none

# Attempt to query the kafka client protocol version from the broker.
# For broker versions >= 0.10.0, this may enable the use of a more
# efficient protocol.
# api.version.request = false

# Timeout for worker threads to wait for message delivery acks before shutdown.
# If 0, wait indefinitely.
# worker.shutdown.timeout.ms = 1000

# Whether to log the offending message when shard keys are missing or
# illegal, or when the message payload is empty.
# If false, only log an error message.
# log_error_data = false
